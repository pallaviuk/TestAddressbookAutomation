{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2021-09-19T09:22:29.602Z",
    "end": "2021-09-19T09:23:22.481Z",
    "duration": 52879,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b0b5fe36-cb2b-484a-bc15-6dc57cd2687c",
      "title": "",
      "fullFile": "cypress/integration/examples/APITest.js",
      "file": "cypress/integration/examples/APITest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f17fd71e-28a8-4428-aab3-30b1175eedd2",
          "title": "CRUD happy path test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test GET Request(Read)",
              "fullTitle": "CRUD happy path test Test GET Request(Read)",
              "timedOut": null,
              "duration": 14707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://reqres.in/api/users?page=2').then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.data[2]).to.have.property('last_name', 'Funke');\n});",
              "err": {},
              "uuid": "cf48a2f6-2907-4324-b4dc-7753f2e619b1",
              "parentUUID": "f17fd71e-28a8-4428-aab3-30b1175eedd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test POST Request(Create)",
              "fullTitle": "CRUD happy path test Test POST Request(Create)",
              "timedOut": null,
              "duration": 9001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://reqres.in/api/users\",\n  body: {\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n  }\n}).then(response => {\n  expect(response.body).has.property(\"name\", \"morpheus\");\n  expect(response.body).has.property(\"job\", \"leader\");\n});",
              "err": {},
              "uuid": "b5ad0bbe-e536-48fe-81aa-bfbff5689613",
              "parentUUID": "f17fd71e-28a8-4428-aab3-30b1175eedd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test PUT Request(Update)",
              "fullTitle": "CRUD happy path test Test PUT Request(Update)",
              "timedOut": null,
              "duration": 13756,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\examples\\\\APITest.js\\\\CRUD happy path test -- Test PUT Request(Update) (failed).png\"\n}",
              "code": "cy.request({\n  method: \"PUT\",\n  url: \"https://reqres.in/api/users\",\n  body: {\n    \"name\": \"morpheus\",\n    \"job\": \"zion\"\n  }\n}).then(response => {\n  expect(response.body).has.property(\"name\", \"morpheus\");\n  expect(response.body).has.property(\"job\", \"zion resident\"); //Aserting negative scenario\n});",
              "err": {
                "message": "AssertionError: expected { Object (name, job, ...) } to have property 'job' of 'zion resident', but got 'zion'",
                "estack": "AssertionError: expected { Object (name, job, ...) } to have property 'job' of 'zion resident', but got 'zion'\n    at Context.eval (https://reqres.in/__cypress/tests?p=cypress\\integration\\examples\\APITest.js:132:33)",
                "diff": "- 'zion'\n+ 'zion resident'\n"
              },
              "uuid": "38c93728-17cd-4302-8a68-3342c703afe3",
              "parentUUID": "f17fd71e-28a8-4428-aab3-30b1175eedd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test DELETE Request(Delete)",
              "fullTitle": "CRUD happy path test Test DELETE Request(Delete)",
              "timedOut": null,
              "duration": 11267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://reqres.in/api/users/2\"\n}).then(response => {\n  expect(response.body).to.be.empty;\n  expect(response.status).to.equal(204);\n});",
              "err": {},
              "uuid": "f83ace9f-c2fe-44df-af0c-84f8bba90187",
              "parentUUID": "f17fd71e-28a8-4428-aab3-30b1175eedd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf48a2f6-2907-4324-b4dc-7753f2e619b1",
            "b5ad0bbe-e536-48fe-81aa-bfbff5689613",
            "f83ace9f-c2fe-44df-af0c-84f8bba90187"
          ],
          "failures": [
            "38c93728-17cd-4302-8a68-3342c703afe3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}